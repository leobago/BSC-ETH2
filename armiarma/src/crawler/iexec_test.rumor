# test to check in the iexec platform
# Attempt to see if it's a rumor - internet problem

# public ip
rasp_id="/ip4/95.169.237.201/tcp/9020/p2p/16Uiu2HAm9jTVTnbEp1mXDvcd6eUGAtV9ARPUgkxDVysZtBzQUgnN"
rasp_enr="enr:-LK4QMNG0ScFzMNDJNSsmhC-6gcWxsqInteU1ijCA2pwThjJTCHAZSVBDkxpTbG8bBMA193PxRMBPGjiVAr-d--q9ToCh2F0dG5ldHOI__________-EZXRoMpAAAAAAAAAAAf__________gmlkgnY0gmlwhF-p7cmJc2VjcDI1NmsxoQLUkfNmb4iVpct7dFCTCrrlHsX8R0y4Mq2J94RZoEf0C4N0Y3CCIzyDdWRwgiM8"

echo "Initializing test"

# Variables
IP="$(curl -s v4.ident.me)"
p2p_port=9020
fork_version="0xb5303f2a"

iexec_test: me

enr make \
  --ip="$IP" \
  --tcp="$p2p_port" \
  --udp="$p2p_port" \
  --static-ip="$IP" \
  --fallback-udp="$p2p_port" \
  --attnets="0xffffffffffffffff" \
  --fork-digest="$fork_version"\
  --next-fork-version="0x00000001" \
  --next-fork-epoch="0xffffffffffffffff"


host start --identify=true --libp2p-ping=true \
  --peer-grace-period=30s --agent="IEXEC-TEST"
host notify all
host listen --ip="0.0.0.0" --tcp="$p2p_port"

# create a shared peerstore, we can hook more actors to it later.
mkdire
peerstore create crawler --store-type=badger --store-path=""

mainnet_genesis="0xeade62f0457b2fdf48e7d3fc4b60736688286be7c7a3ac4c9a16a5e0600bd9e4"

# We zero out attnets here, even though we advertise it in the ENR. We can't really support the attnets without gossip.
peer metadata set \
      --attnets="0x0000000000000000" \
      --seq-number=0

# change status, as if we are at the start of the Medalla chain
peer status set \
      --finalized-epoch=0 \
      --finalized-root="0000000000000000000000000000000000000000000000000000000000000000" \
      --fork-digest="$fork_version" \
      --head-root="$mainnet_genesis" \
      --head-slot=0

# ignore goodbye endpoints
rpc goodbye listen --drop --compression=snappy
rpc goodbye listen --drop --compression=none 

peer status serve
peer metadata serve

# Start polling status of everyone
# Exchange status with everyone every slot
peer status poll --interval=12s  --timeout=3s --compression=snappy
peer status poll --interval=12s  --timeout=3s --compression=none

# Ping everyone every 30s, and update metadata if they have new data for us
peer metadata poll --interval=30s  --timeout=10s  --update=true --update-timeout=20s --compression=snappy
peer metadata poll --interval=30s  --timeout=10s  --update=true --update-timeout=20s --compression=none

# Serve pong requests, also update if we get a higher ping than known
peer metadata pong --update=true --compression=snappy
peer metadata pong --update=true --compression=none

gossip start
gossip topic join --eth-topic="beacon_block" --fork-version="b5303f2a"
gossip topic log --eth-topic="beacon_block" --fork-version="b5303f2a"
gossip topic events --eth-topic="beacon_block" --fork-version="b5303f2a"


# DV5 bootnodes
# Bootnodes for the Mainnet Network
bootnodes=$(cat << EndOfMessage
enr:-KG4QOtcP9X1FbIMOe17QNMKqDxCpm14jcX5tiOE4_TyMrFqbmhPZHK_ZPG2Gxb1GE2xdtodOfx9-cgvNtxnRyHEmC0ghGV0aDKQ9aX9QgAAAAD__________4JpZIJ2NIJpcIQDE8KdiXNlY3AyNTZrMaEDhpehBDbZjM_L9ek699Y7vhUJ-eAdMyQW_Fil522Y0fODdGNwgiMog3VkcIIjKA
enr:-KG4QDyytgmE4f7AnvW-ZaUOIi9i79qX4JwjRAiXBZCU65wOfBu-3Nb5I7b_Rmg3KCOcZM_C3y5pg7EBU5XGrcLTduQEhGV0aDKQ9aX9QgAAAAD__________4JpZIJ2NIJpcIQ2_DUbiXNlY3AyNTZrMaEDKnz_-ps3UUOfHWVYaskI5kWYO_vtYMGYCQRAR3gHDouDdGNwgiMog3VkcIIjKA
enr:-Ku4QImhMc1z8yCiNJ1TyUxdcfNucje3BGwEHzodEZUan8PherEo4sF7pPHPSIB1NNuSg5fZy7qFsjmUKs2ea1Whi0EBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1pf1CAAAAAP__________gmlkgnY0gmlwhBLf22SJc2VjcDI1NmsxoQOVphkDqal4QzPMksc5wnpuC3gvSC8AfbFOnZY_On34wIN1ZHCCIyg
enr:-Ku4QP2xDnEtUXIjzJ_DhlCRN9SN99RYQPJL92TMlSv7U5C1YnYLjwOQHgZIUXw6c-BvRg2Yc2QsZxxoS_pPRVe0yK8Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1pf1CAAAAAP__________gmlkgnY0gmlwhBLf22SJc2VjcDI1NmsxoQMeFF5GrS7UZpAH2Ly84aLK-TyvH-dRo0JM1i8yygH50YN1ZHCCJxA
enr:-Ku4QPp9z1W4tAO8Ber_NQierYaOStqhDqQdOPY3bB3jDgkjcbk6YrEnVYIiCBbTxuar3CzS528d2iE7TdJsrL-dEKoBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1pf1CAAAAAP__________gmlkgnY0gmlwhBLf22SJc2VjcDI1NmsxoQMw5fqqkw2hHC4F5HZZDPsNmPdB1Gi8JPQK7pRc9XHh-oN1ZHCCKvg
enr:-Jq4QN6_FzIYyfJET9hiLcGUsg_EVOwCQ4bwsBwe0S4ElrfXUXufSYLtQAHU9_LuO9uice7EAaLbDlMK8QEhtyg8Oh4BhGV0aDKQtTA_KgAAAAD__________4JpZIJ2NIJpcIQDGh4giXNlY3AyNTZrMaECSHaY_36GdNjF8-CLfMSg-8lB0wce5VRZ96HkT9tSkVeDdWRwgiMo
enr:-Jq4QMOjjkLYSN7GVAf_zBSS5c_MokSPMZZvmjLUYiuHrPLHInjeBtF1IfskuYlmhglGan2ECmPk89SRXr4FY1jVp5YBhGV0aDKQtTA_KgAAAAD__________4JpZIJ2NIJpcIQi8wB6iXNlY3AyNTZrMaEC0EiXxAB2QKZJuXnUwmf-KqbP9ZP7m9gsRxcYvoK9iTCDdWRwgiMo
enr:-Ku4QHqVeJ8PPICcWk1vSn_XcSkjOkNiTg6Fmii5j6vUQgvzMc9L1goFnLKgXqBJspJjIsB91LTOleFmyWWrFVATGngBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhAMRHkWJc2VjcDI1NmsxoQKLVXFOhp2uX6jeT0DvvDpPcU8FWMjQdR4wMuORMhpX24N1ZHCCIyg
enr:-Ku4QG-2_Md3sZIAUebGYT6g0SMskIml77l6yR-M_JXc-UdNHCmHQeOiMLbylPejyJsdAPsTHJyjJB2sYGDLe0dn8uYBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhBLY-NyJc2VjcDI1NmsxoQORcM6e19T1T9gi7jxEZjk_sjVLGFscUNqAY9obgZaxbIN1ZHCCIyg
enr:-Ku4QPn5eVhcoF1opaFEvg1b6JNFD2rqVkHQ8HApOKK61OIcIXD127bKWgAtbwI7pnxx6cDyk_nI88TrZKQaGMZj0q0Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhDayLMaJc2VjcDI1NmsxoQK2sBOLGcUb4AwuYzFuAVCaNHA-dy24UuEKkeFNgCVCsIN1ZHCCIyg
enr:-Ku4QEWzdnVtXc2Q0ZVigfCGggOVB2Vc1ZCPEc6j21NIFLODSJbvNaef1g4PxhPwl_3kax86YPheFUSLXPRs98vvYsoBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhDZBrP2Jc2VjcDI1NmsxoQM6jr8Rb1ktLEsVcKAPa08wCsKUmvoQ8khiOl_SLozf9IN1ZHCCIyg
enr:-LK4QLU5_AeUzZEtpK8grqPo4EmX4el3ochu8vNNoXX1PrBjYfn8ksjeQ1eFtbL7ywMau9k_7BBQGmO26DHWgngkBCgBh2F0dG5ldHOI__________-EZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhAN7_O-Jc2VjcDI1NmsxoQKH1zg2Fge8Q6Zf-rLFbjGEtgvVbmDXqFVLxqquJcguFIN0Y3CCI4yDdWRwgiOM
enr:-LK4QLjSKc09WkFZ5Pa1UF3KPkt3ieTZ6B7F6iDL_chyniP5NVDl10aGIu-pL9mbwZ47GM3RN63eGHPsw-MTLSYcz74Bh2F0dG5ldHOI__________-EZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhDQ7fI6Jc2VjcDI1NmsxoQJDU6zzDlUDgUqFSzoIuP9bWu097k2d7X4eHoJTGhbphoN0Y3CCI4yDdWRwgiOM
enr:-LK4QLjSKc09WkFZ5Pa1UF3KPkt3ieTZ6B7F6iDL_chyniP5NVDl10aGIu-pL9mbwZ47GM3RN63eGHPsw-MTLSYcz74Bh2F0dG5ldHOI__________-EZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhDQ7fI6Jc2VjcDI1NmsxoQJDU6zzDlUDgUqFSzoIuP9bWu097k2d7X4eHoJTGhbphoN0Y3CCI4yDdWRwgiOM
EndOfMessage
)

bootnodes=$(echo -n $bootnodes | tr " " ",")

# Run the dv5 service using the bootnodes 
_dv5_run lvl_info dv5 run --bootnodes=$bootnodes

# Add the get peers to the peerstore filtering by fork-digest
# --stepwise=false --interval="" will make that the dv5 adds automatically the found peer to the peerstore (every 200ms, to dot saturate the CPU and the network)
lvl_info dv5 random --add=true --stepwise=false --interval=200ms --filter-digest=$fork_version


mkdir metrics

# Set the names of the files that will be pased as arg to the command
filepath="metrics/gossip-metrics.json"
peerstorepath="metrics/peerstore.json"
csvpath="metrics/metrics.csv"

echo "gossip metrics file: $filepath"
echo "peerstore file:      $peerstorepath"

gossip topic export-metrics --file-path="$filepath" --peerstore-path="$peerstorepath" --csv-file="$csvpath" --export-period=10s

# Connect the crawler peers in an auto-mode
peer connectall --filter-digest="$fork_version" --max-peers=1000 --max-retries=10 --rescan=15s --timeout=10s --workers=6

host view
echo "$IP"

sleep 3m
